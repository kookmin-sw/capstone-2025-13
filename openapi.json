{
  "openapi": "3.1.0",
  "info": {
    "title": "Wuung API Server",
    "version": "v1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    },
    {
      "url": "https://wuung.mori.space"
    },
    {
      "url": "https://wuung-frontend.mori.space"
    }
  ],
  "security": [
    {
      "api token": []
    }
  ],
  "tags": [
    {
      "name": "Diagnosis API",
      "description": "Endpoints for Diagnosis create and read data"
    },
    {
      "name": "Auth API",
      "description": "Endpoints for authentication and token management"
    },
    {
      "name": "Quests API",
      "description": "Endpoints for quests"
    },
    {
      "name": "Record API",
      "description": "Endpoints for records"
    }
  ],
  "paths": {
    "/records/create": {
      "put": {
        "tags": [
          "Record API"
        ],
        "summary": "Create new record",
        "description": "Create a new record with rate and data",
        "operationId": "createRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created record",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTORecordDTO"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/quests": {
      "put": {
        "tags": [
          "Quests API"
        ],
        "summary": "Create a new quest",
        "description": "Creates a new quest instance for the authenticated user",
        "operationId": "createQuests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created quest",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOUserQuestsDTO"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Quest not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Quests API"
        ],
        "summary": "Update quest progress",
        "description": "Updates the progress of a quest for the authenticated user",
        "operationId": "updateQuests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully updated quest",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOUserQuestsDTO"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Quest not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/daignosis/submit": {
      "put": {
        "tags": [
          "Diagnosis API"
        ],
        "summary": "Submit diagnosis result",
        "description": "Submit a new diagnosis result for the authenticated user",
        "operationId": "putDiagnosis",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnosisResultSubmitRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully submitted diagnosis result",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTODiagnosisResultDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Diagnosis not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/records/modify": {
      "post": {
        "tags": [
          "Record API"
        ],
        "summary": "Modify existing record",
        "description": "Update rate and data of an existing record",
        "operationId": "modifyRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully updated record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth API"
        ],
        "summary": "Sign up new user and generate new tokens",
        "description": "Create new user provided credentials with additional fields and generate tokens for access",
        "operationId": "signUpUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "sign up user",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOSignUpResponse"
                }
              }
            }
          },
          "400": {
            "description": "sign up failed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth API"
        ],
        "summary": "Refresh JWT tokens",
        "description": "Generates new access and refresh tokens from a valid refresh token.",
        "operationId": "refreshToken",
        "requestBody": {
          "description": "Refresh token to generate new tokens",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed tokens",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOTokenRefreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired refresh token",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth API"
        ],
        "summary": "Logout user",
        "description": "Invalidates refresh tokens for the user.",
        "operationId": "logoutUser",
        "requestBody": {
          "description": "Refresh token to invalidate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOString"
                }
              }
            }
          },
          "400": {
            "description": "Invalid refresh token",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth API"
        ],
        "summary": "Authenticate user and generate JWT tokens",
        "description": "Validates user credentials and provides access and refresh tokens.",
        "operationId": "authenticateUser",
        "requestBody": {
          "description": "Email and password for authentication",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully authenticated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOLoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/records/me": {
      "get": {
        "tags": [
          "Record API"
        ],
        "summary": "Get record by date",
        "description": "Get a user's record for a specific date",
        "operationId": "getRecordByDate",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Date in format yyyy-MM-dd",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Date in format yyyy-MM-dd",
              "example": "2025-05-01"
            },
            "example": "2025-05-01"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Record not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/quests/me": {
      "get": {
        "tags": [
          "Quests API"
        ],
        "summary": "Get my quests",
        "description": "Get my quests",
        "operationId": "getQuests",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start date in format yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Start date in format yyyy-MM-dd",
              "example": "2000-01-01"
            },
            "example": "2000-01-01"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved quests",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOListUserQuestsDTO"
                }
              }
            }
          },
          "403": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/daignosis/{id}": {
      "get": {
        "tags": [
          "Diagnosis API"
        ],
        "summary": "Get diagnosis by ID",
        "description": "Retrieve diagnosis details for the specified ID",
        "operationId": "getDiagnosis",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved diagnosis",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTODiagnosisDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Diagnosis not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/daignosis/results": {
      "get": {
        "tags": [
          "Diagnosis API"
        ],
        "summary": "Get diagnosis results",
        "description": "Retrieve diagnosis results for the authenticated user with optional date filtering",
        "operationId": "getDiagnosisResults",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start date in format yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Start date in format yyyy-MM-dd",
              "example": "2000-01-01"
            },
            "example": "2000-01-01"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved diagnosis results",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOListDiagnosisResultDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/daignosis/list": {
      "get": {
        "tags": [
          "Diagnosis API"
        ],
        "summary": "Get all diagnosis list",
        "description": "Retrieve a list of all available diagnoses",
        "operationId": "getDiagnosisList",
        "responses": {
          "200": {
            "description": "Successfully retrieved diagnosis list",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOListDiagnosisDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "Auth API"
        ],
        "summary": "Get current user's information",
        "description": "Retrieves the logged-in user's information using a valid access token.",
        "operationId": "getUserInfo",
        "responses": {
          "200": {
            "description": "Successfully retrieved user information",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOUserInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing access token",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "main-controller"
        ],
        "operationId": "index",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOString"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateRecordRequest": {
        "type": "object",
        "properties": {
          "rate": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "ApiResponseDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ApiResponseDTORecordDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/RecordDTO"
          }
        }
      },
      "RecordDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "rate": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateQuestRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiResponseDTOUserQuestsDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/UserQuestsDTO"
          }
        }
      },
      "UserQuestsDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "MEDITATE",
              "ACTIVITY",
              "EMOTION"
            ]
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "target": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DiagnosisResultSubmitRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "result": {
            "type": "integer",
            "format": "int32"
          },
          "scale": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiResponseDTODiagnosisResultDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/DiagnosisResultDTO"
          }
        }
      },
      "DiagnosisResultDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "diagnosisId": {
            "type": "integer",
            "format": "int64"
          },
          "result": {
            "type": "integer",
            "format": "int32"
          },
          "scale": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RecordUpdateRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "rate": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "UpdateQuestRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "current": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          },
          "user_name": {
            "type": "string"
          },
          "birth_date": {
            "type": "string",
            "description": "Birth date in format yyyy-MM-dd",
            "example": "2000-01-01"
          }
        }
      },
      "ApiResponseDTOSignUpResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/SignUpResponse"
          }
        }
      },
      "SignUpResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "TokenRefreshRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ApiResponseDTOTokenRefreshResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/TokenRefreshResponse"
          }
        }
      },
      "TokenRefreshResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ApiResponseDTOString": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ApiResponseDTOLoginResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/LoginResponse"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ApiResponseDTOListUserQuestsDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserQuestsDTO"
            }
          }
        }
      },
      "ApiResponseDTODiagnosisDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/DiagnosisDTO"
          }
        }
      },
      "DiagnosisDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "enum": [
              "Simple",
              "PHQ_9",
              "BDI"
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiagnosisQuestionDTO"
            }
          },
          "scale": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiagnosisScaleDTO"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DiagnosisQuestionDTO": {
        "type": "object",
        "properties": {
          "seq": {
            "type": "integer",
            "format": "int32"
          },
          "text": {
            "type": "string"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiagnosisTextDTO"
            }
          }
        }
      },
      "DiagnosisScaleDTO": {
        "type": "object",
        "properties": {
          "start": {
            "type": "integer",
            "format": "int32"
          },
          "scaleName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "DiagnosisTextDTO": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          },
          "score": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ApiResponseDTOListDiagnosisResultDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiagnosisResultDTO"
            }
          }
        }
      },
      "ApiResponseDTOListDiagnosisDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiagnosisDTO"
            }
          }
        }
      },
      "ApiResponseDTOUserInfoResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/UserInfoResponse"
          }
        }
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "api token": {
        "type": "http",
        "name": "api token",
        "scheme": "bearer"
      }
    }
  }
}