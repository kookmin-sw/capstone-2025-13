{
  "openapi": "3.1.0",
  "info": {
    "title": "Wuung API Server",
    "version": "v1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    },
    {
      "url": "https://wuung.mori.space"
    },
    {
      "url": "https://wuung-frontend.mori.space"
    }
  ],
  "security": [
    {
      "api token": []
    }
  ],
  "tags": [
    {
      "name": "Diagnosis API",
      "description": "Endpoints for Diagnosis create and read data"
    },
    {
      "name": "Auth API",
      "description": "Endpoints for authentication and token management"
    },
    {
      "name": "Quests API",
      "description": "Endpoints for quests"
    },
    {
      "name": "Diagnosis Text API",
      "description": "Endpoints for read diagnosis text"
    }
  ],
  "paths": {
    "/quests": {
      "put": {
        "tags": [
          "Quests API"
        ],
        "summary": "Create a new quest",
        "description": "Creates a new quest instance for the authenticated user",
        "operationId": "createQuests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQuestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created quest",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOUserQuestsDTO"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Quest not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Quests API"
        ],
        "summary": "Update quest progress",
        "description": "Updates the progress of a quest for the authenticated user",
        "operationId": "updateQuests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully updated quest",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOUserQuestsDTO"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Quest not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/daignosisText/read": {
      "post": {
        "tags": [
          "Diagnosis Text API"
        ],
        "summary": "read diagnosis text list",
        "description": "read diagnosis text list specific type",
        "operationId": "readDiagnosisText",
        "requestBody": {
          "description": "access token to read diagnosis text",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReadDiagnosisTextRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully read diagnosis text",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOListString"
                }
              }
            }
          },
          "400": {
            "description": "Failed to read diagnosis text",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/daignosis/create": {
      "post": {
        "tags": [
          "Diagnosis API"
        ],
        "operationId": "createDiagnosis",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDiagnosisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully create diagnosis",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDiagnosisResponse"
                }
              }
            }
          },
          "400": {
            "description": "Failed to create diagnosis",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDiagnosisResponse"
                }
              }
            }
          },
          "403": {
            "description": "Exception raised while create diagnosis",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDiagnosisResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth API"
        ],
        "summary": "Sign up new user and generate new tokens",
        "description": "Create new user provided credentials with additional fields and generate tokens for access",
        "operationId": "signUpUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "sign up user",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOSignUpResponse"
                }
              }
            }
          },
          "400": {
            "description": "sign up failed",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth API"
        ],
        "summary": "Refresh JWT tokens",
        "description": "Generates new access and refresh tokens from a valid refresh token.",
        "operationId": "refreshToken",
        "requestBody": {
          "description": "Refresh token to generate new tokens",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed tokens",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOTokenRefreshResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid or expired refresh token",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth API"
        ],
        "summary": "Logout user",
        "description": "Invalidates refresh tokens for the user.",
        "operationId": "logoutUser",
        "requestBody": {
          "description": "Refresh token to invalidate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully logged out",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOString"
                }
              }
            }
          },
          "400": {
            "description": "Invalid refresh token",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth API"
        ],
        "summary": "Authenticate user and generate JWT tokens",
        "description": "Validates user credentials and provides access and refresh tokens.",
        "operationId": "authenticateUser",
        "requestBody": {
          "description": "Email and password for authentication",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully authenticated",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOLoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/quests/me": {
      "get": {
        "tags": [
          "Quests API"
        ],
        "summary": "Get my quests",
        "description": "Get my quests",
        "operationId": "getQuests",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start date in format yyyy-MM-dd",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Start date in format yyyy-MM-dd",
              "example": "2000-01-01"
            },
            "example": "2000-01-01"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved quests",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOListUserQuestsDTO"
                }
              }
            }
          },
          "403": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": [
          "Auth API"
        ],
        "summary": "Get current user's information",
        "description": "Retrieves the logged-in user's information using a valid access token.",
        "operationId": "getUserInfo",
        "responses": {
          "200": {
            "description": "Successfully retrieved user information",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOUserInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing access token",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "main-controller"
        ],
        "operationId": "index",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseDTOString"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateQuestRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ApiResponseDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ApiResponseDTOUserQuestsDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/UserQuestsDTO"
          }
        }
      },
      "UserQuestsDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "MEDITATE",
              "ACTIVITY",
              "EMOTION"
            ]
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "target": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UpdateQuestRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "current": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ReadDiagnosisTextRequest": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "ApiResponseDTOListString": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateDiagnosisRequest": {
        "type": "object",
        "properties": {
          "result": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "createAt": {
            "type": "string"
          }
        }
      },
      "CreateDiagnosisResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          },
          "user_name": {
            "type": "string"
          },
          "birth_date": {
            "type": "string",
            "description": "Birth date in format yyyy-MM-dd",
            "example": "2000-01-01"
          }
        }
      },
      "ApiResponseDTOSignUpResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/SignUpResponse"
          }
        }
      },
      "SignUpResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "TokenRefreshRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ApiResponseDTOTokenRefreshResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/TokenRefreshResponse"
          }
        }
      },
      "TokenRefreshResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ApiResponseDTOString": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ApiResponseDTOLoginResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/LoginResponse"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "ApiResponseDTOListUserQuestsDTO": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserQuestsDTO"
            }
          }
        }
      },
      "ApiResponseDTOUserInfoResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "$ref": "#/components/schemas/UserInfoResponse"
          }
        }
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "api token": {
        "type": "http",
        "name": "api token",
        "scheme": "bearer"
      }
    }
  }
}